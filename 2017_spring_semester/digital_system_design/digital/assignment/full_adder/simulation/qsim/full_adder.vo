// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "04/15/2017 11:55:57"

// 
// Device: Altera EP4CE6F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module full_adder (
	w,
	x,
	y,
	carry,
	sum);
input 	w;
input 	x;
input 	y;
output 	carry;
output 	sum;

// Design Ports Information
// carry	=>  Location: PIN_A6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sum	=>  Location: PIN_C2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x	=>  Location: PIN_B1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y	=>  Location: PIN_F5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \carry~output_o ;
wire \sum~output_o ;
wire \w~input_o ;
wire \y~input_o ;
wire \x~input_o ;
wire \u3|c~0_combout ;
wire \u2|s~0_combout ;


// Location: IOOBUF_X9_Y24_N16
cycloneive_io_obuf \carry~output (
	.i(\u3|c~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\carry~output_o ),
	.obar());
// synopsys translate_off
defparam \carry~output .bus_hold = "false";
defparam \carry~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y22_N16
cycloneive_io_obuf \sum~output (
	.i(\u2|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum~output_o ),
	.obar());
// synopsys translate_off
defparam \sum~output .bus_hold = "false";
defparam \sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y21_N22
cycloneive_io_ibuf \w~input (
	.i(w),
	.ibar(gnd),
	.o(\w~input_o ));
// synopsys translate_off
defparam \w~input .bus_hold = "false";
defparam \w~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N15
cycloneive_io_ibuf \y~input (
	.i(y),
	.ibar(gnd),
	.o(\y~input_o ));
// synopsys translate_off
defparam \y~input .bus_hold = "false";
defparam \y~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y22_N1
cycloneive_io_ibuf \x~input (
	.i(x),
	.ibar(gnd),
	.o(\x~input_o ));
// synopsys translate_off
defparam \x~input .bus_hold = "false";
defparam \x~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y22_N0
cycloneive_lcell_comb \u3|c~0 (
// Equation(s):
// \u3|c~0_combout  = (\w~input_o  & ((\y~input_o ) # (\x~input_o ))) # (!\w~input_o  & (\y~input_o  & \x~input_o ))

	.dataa(gnd),
	.datab(\w~input_o ),
	.datac(\y~input_o ),
	.datad(\x~input_o ),
	.cin(gnd),
	.combout(\u3|c~0_combout ),
	.cout());
// synopsys translate_off
defparam \u3|c~0 .lut_mask = 16'hFCC0;
defparam \u3|c~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y22_N2
cycloneive_lcell_comb \u2|s~0 (
// Equation(s):
// \u2|s~0_combout  = \w~input_o  $ (\y~input_o  $ (\x~input_o ))

	.dataa(gnd),
	.datab(\w~input_o ),
	.datac(\y~input_o ),
	.datad(\x~input_o ),
	.cin(gnd),
	.combout(\u2|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \u2|s~0 .lut_mask = 16'hC33C;
defparam \u2|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign carry = \carry~output_o ;

assign sum = \sum~output_o ;

endmodule
